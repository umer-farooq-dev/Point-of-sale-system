<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAMFJREFUWEft
        lj0OwjAMhbPAEvdGCCRuQJNegZvwdzdWJJIuDIBQLwEqeu3QYmGUbPiT3tAn1/lGG0UZcqrMNDi7C664
        REfPHGl31d5uj2szwTM80dn9pyU5Upe0wTM80dPtPVzRAlUy5xUtIXFFxdPZ4jMb4r0qoAIqoAIqoALc
        YNdLg996uH7EtwXS4Lcerh8hHvwRFZALeHq0g6EqZqiSiSXNIXBHxRO9PXS2uSM6StuzHJdxM1yQkEZ8
        lit/hjEvpTi5Djvme38AAAAASUVORK5CYII=
</value>
  </data>
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAARJJREFUSEvt
        lsEOgjAMhnkEL158/2fRoDEk3gzhGTzgwjjN1rSKYytj60n9kz8sW9sPlsKo/vpN9X2/Hc14AO9xTNPJ
        yso3xuzs3V6tse5pGOMcLS8qO38ww+mV9PYl5c4xBmO9XAc1jxQSFwb5iWQRHoOioWZNYXG5m9tE4ZFt
        m23vxFgLa1KorDVwNSgrBa4OZYlwYztY6wLzZVDWAnxmFSgrFa4KZWFBKN74sIkbdSgKGwk+gW0AyG6n
        3a4iqXs/7L1qRUqGsjXgEhS2/QxX9GytCC5BuXvFbs+Bp0ApNOkLR6Gy1kBZKnAoEDqP0SXHYvZ5XPoj
        sP48xnFoe2Mqysc7xwRwnfKkvkrz//oGVdUDm1N005i5bGAAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAB/9k=
</value>
  </data>
</root>